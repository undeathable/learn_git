Git定义：分布式版本 控制 软件

安装Git：https://git-scm.com/download/win
  右键 -> Open git bash here
  $ git --version

版本控制（git管理文件夹）：
  step1：进入要管理的文件夹（包含开发的代码）
  step2：初始化
  $ git init
  step3：管理
  $ git status # 检测当前文件下的文件状态，标红的文件代表新增文件，之前没有
  $ git add xxx.py # 管理某一个文件，随后通过git status发现该文件状态发生变化（颜色变绿）
  $ git add . # 管理所有未被管理文件
  step4：生成版本
  $ git commit -m 'xxxxxx' # 生成一个版本
  $ git log # 查看以往版本生成记录

  注：首次使用报错可能因为缺少用户配置（once for all）
  $ git config --global user.email "you@example.com"
  $ git config --global user.name "Your Name"

  git三大区概念：
  工作区：已存在文件、新增文件（红色）、已修改文件（红色）
  暂存区：通过add .指令从工作区导入
  版本库：通过commit指令从暂存区导入

git回滚：
  # 回滚到之前的版本
  $ git log
  $ git reset --hard 版本号 # git log中的commit后面的md5码值

  # 回滚到之后的版本（回滚到之前版本后，又想回滚到后面版本）
  $ git reflog
  $ git reset --hard 版本号

git工作区 暂存区切换
  # 将git status检测“红色”的文件，变回改动前的已存在文件状态（工作区：已存在文件 <- 新增文件/已修改文件（红色））
  $ git checkout -- filename
  
  # 将暂存区的“绿色”的文件，变回检测“红色”的文件（工作区：新增文件/已修改文件（红色） <- 暂存区 add. 之后的文件（绿色））
  $ git reset HEAD filename
  注：随后再执行 git checkout就可再轨道变动前的已存在文件状态


